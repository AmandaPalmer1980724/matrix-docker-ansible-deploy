---

- name: Fail if required settings not defined
  fail:
    msg: >-
      You need to define a required configuration setting (`{{ item }}`).
  when: "vars[item] == ''"
  with_items:
    - "matrix_appservice_irc_appservice_token"
    - "matrix_appservice_irc_homeserver_token"

# Our base configuration (`matrix_appservice_irc_configuration_yaml`) is not enough to
# let the playbook run without errors.
#
# Unless the final configuration (`matrix_appservice_irc_configuration`) contains an `ircService` definition,
# we'd fail generating the registration.yaml file with a non-helpful error.
#
# This is a safety check to ensure we fail earlier and in a nicer way.
- name: Fail if no additional configuration provided
  fail:
    msg: >-
      Your Appservice IRC configuration is incomplete (lacking an `ircService.servers` configuration).
      You need to define one or more servers by either using `matrix_appservice_irc_ircService_servers`
      or by extending the base configuration with additional configuration in `matrix_appservice_irc_configuration_extension_yaml`.
      Overriding the whole bridge's configuration (`matrix_appservice_irc_configuration`) is yet another possibility.
  when: "matrix_appservice_irc_configuration.ircService.servers|length == 0"

- name: (Deprecation) Catch and report renamed appservice-irc variables
  fail:
    msg: >-
      Your configuration contains a variable, which now has a different name.
      Please change your configuration to rename the variable (`{{ item.old }}` -> `{{ item.new }}`).
  when: "item.old in vars"
  with_items:
    - {'old': 'matrix_appservice_irc_container_expose_client_server_api_port', 'new': '<superseded by matrix_appservice_irc_container_http_host_bind_port>'}

- block:
  - name: Check if a neDB database already exists
    stat:
      path: "{{ matrix_appservice_irc_data_path }}/"
    register: matrix_appservice_irc_nedb_stat_result

  - name: Fail if an neDB database already exists when using Postgres
    fail:
      msg: >-2
        matrix_appservice_irc_database_engine has been set to `postgres` (which is our new default now).
        However, we've discovered an existing neDB database in {{ matrix_appservice_irc_data_path }}/.
        It appears that you've been using this bridge with the neDB engine until now.
        To continue using neDB, opt into it explicitly: add `matrix_appservice_irc_database_engine: nedb` to your vars.yml file and re-run this same command.
        Alternatively, to migrate your existing neDB database to Postgres:
        1. Stop all services (`ansible-playbook -i inventory/hosts setup.yml --tags=stop`)
        2. Import the neDB database into Postgres (`ansible-playbook -v -i inventory/hosts setup.yml --tags=import-generic-sqlite-db --extra-vars='sqlite_database_path={{ matrix_appservice_irc_data_path }} postgres_connection_string_variable_name=matrix_appservice_irc_database_connString'`)
        3. Re-run the playbook (`ansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start`)
    when: "matrix_appservice_irc_nedb_stat_result.stat.exists"
  when: "matrix_appservice_irc_database_engine == 'postgres'"
