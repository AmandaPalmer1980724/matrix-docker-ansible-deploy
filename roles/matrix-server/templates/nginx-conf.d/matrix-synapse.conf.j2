server {
	listen 80;
	server_name {{ hostname_matrix }};

	server_tokens off;

	location /.well-known/acme-challenge {
		{% if matrix_nginx_proxy_enabled %}
			{# Use the embedded DNS resolver in Docker containers to discover the service #}
			resolver 127.0.0.11 valid=5s;
			set $backend "matrix-certbot:80";
			proxy_pass http://$backend;
		{% else %}
			{# Generic configuration for use outside of our container setup #}
			proxy_pass http://localhost:{{ matrix_ssl_certbot_standalone_http_port }};
		{% endif %}
	}

	location / {
		return 301 https://$http_host$request_uri;
	}
}

server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	server_name {{ hostname_matrix }};

	server_tokens off;
	root /dev/null;

	gzip on;
	gzip_types text/plain application/json;

	ssl_certificate {{ matrix_ssl_config_dir_path }}/live/{{ hostname_matrix }}/fullchain.pem;
	ssl_certificate_key {{ matrix_ssl_config_dir_path }}/live/{{ hostname_matrix }}/privkey.pem;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";

	{% if matrix_corporal_enabled and matrix_corporal_http_api_enabled %}
	location /_matrix/corporal {
		{% if matrix_nginx_proxy_enabled %}
			{# Use the embedded DNS resolver in Docker containers to discover the service #}
			resolver 127.0.0.11 valid=5s;
			set $backend "matrix-corporal:41081";
			proxy_pass http://$backend;
		{% else %}
			{# Generic configuration for use outside of our container setup #}
			proxy_pass http://localhost:41081;
		{% endif %}
	}
	{% endif %}

	{% if matrix_mxisd_enabled %}
	location /_matrix/identity {
		{% if matrix_nginx_proxy_enabled %}
			{# Use the embedded DNS resolver in Docker containers to discover the service #}
			resolver 127.0.0.11 valid=5s;
			set $backend "matrix-mxisd:8090";
			proxy_pass http://$backend;
		{% else %}
			{# Generic configuration for use outside of our container setup #}
			proxy_pass http://localhost:8090;
		{% endif %}
	}
	{% endif %}

	location /_matrix {
		{% if matrix_nginx_proxy_enabled %}
			{# Use the embedded DNS resolver in Docker containers to discover the service #}
			resolver 127.0.0.11 valid=5s;
			set $backend "{{ matrix_nginx_proxy_matrix_client_api_addr_with_proxy_container }}";
			proxy_pass http://$backend;
		{% else %}
			{# Generic configuration for use outside of our container setup #}
			proxy_pass http://{{ matrix_nginx_proxy_matrix_client_api_addr_sans_proxy_container }};
		{% endif %}

		proxy_set_header X-Forwarded-For $remote_addr;

		client_body_buffer_size 25M;
		client_max_body_size {{ matrix_synapse_max_upload_size_mb }}M;
		proxy_max_temp_file_size 0;
	}
}
