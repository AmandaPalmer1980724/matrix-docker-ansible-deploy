---

# If the matrix-synapse role is not used, `matrix_synapse_role_executed` won't exist.
# We don't want to fail in such cases.
- name: Fail if matrix-synapse role already executed
  fail:
    msg: >-
      The matrix-bridge-mautrix-hangouts role needs to execute before the matrix-synapse role.
  when: "matrix_synapse_role_executed|default(False)"

- block:
  - name: Check if an SQLite database already exists
    stat:
      path: "{{ matrix_mautrix_hangouts_sqlite_database_path_local }}"
    register: matrix_mautrix_hangouts_sqlite_database_path_local_stat_result

  - name: Fail if an SQLite database already exists when using Postgres
    fail:
      msg: >-
        matrix_mautrix_hangouts_database_engine has been set to `postgres` (which is our new default now).
        However, we've discovered an existing SQLite database in {{ matrix_mautrix_hangouts_sqlite_database_path_local }}.
        It appears that you've been using this bridge with the SQLite engine until now.
        To continue using SQLite, opt into it explicitly: add `matrix_mautrix_hangouts_database_engine: sqlite` to your vars.yml file and re-run this same command.
        Alternatively, to migrate your existing SQLite database to Postgres:
        1. Stop all services (`ansible-playbook -i inventory/hosts setup.yml --tags=stop`)
        2. Import the SQLite database into Postgres (`ansible-playbook -v -i inventory/hosts setup.yml --tags=import-generic-sqlite-db --extra-vars='sqlite_database_path={{ matrix_mautrix_hangouts_sqlite_database_path_local }} postgres_connection_string_variable_name=matrix_mautrix_hangouts_postgres_connection_string'`)
        3. Re-run the playbook (`ansible-playbook -i inventory/hosts setup.yml --tags=setup-all,start`)
    when: "matrix_mautrix_hangouts_sqlite_database_path_local_stat_result.stat.exists"
  when: "matrix_mautrix_hangouts_database_engine == 'postgres'"

- name: Ensure Mautrix Hangouts image is pulled
  docker_image:
    name: "{{ matrix_mautrix_hangouts_docker_image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
    force_source: "{{ matrix_mautrix_hangouts_docker_image_force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else matrix_mautrix_hangouts_docker_image_force_pull }}"
  when: matrix_mautrix_hangouts_enabled|bool and not matrix_mautrix_hangouts_container_image_self_build

- name: Ensure Mautrix Hangouts paths exist
  file:
    path: "{{ item.path }}"
    state: directory
    mode: 0750
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"
  with_items:
    - { path: "{{ matrix_mautrix_hangouts_base_path }}", when: true }
    - { path: "{{ matrix_mautrix_hangouts_config_path }}", when: true }
    - { path: "{{ matrix_mautrix_hangouts_data_path }}", when: true }
    - { path: "{{ matrix_mautrix_hangouts_docker_src_files_path }}", when: "{{ matrix_mautrix_hangouts_container_image_self_build }}" }
  when: matrix_mautrix_hangouts_enabled|bool and item.when|bool

- name: Ensure Mautrix Hangots repository is present on self build
  git:
    repo: "{{ matrix_mautrix_hangouts_container_image_self_build_repo }}"
    dest: "{{ matrix_mautrix_hangouts_docker_src_files_path }}"
    force: "yes"
  register: matrix_mautrix_hangouts_git_pull_results
  when: "matrix_mautrix_hangouts_enabled|bool and matrix_mautrix_hangouts_container_image_self_build|bool"

- name: Ensure Mautrix Hangouts Docker image is built
  docker_image:
    name: "{{ matrix_mautrix_hangouts_docker_image }}"
    source: build
    force_source: "{{ matrix_mautrix_hangouts_git_pull_results.changed }}"
    build:
      dockerfile: Dockerfile
      path: "{{ matrix_mautrix_hangouts_docker_src_files_path }}"
      pull: yes
  when: "matrix_mautrix_hangouts_enabled|bool and matrix_mautrix_hangouts_container_image_self_build|bool"

- name: Check if an old database file already exists
  stat:
    path: "{{ matrix_mautrix_hangouts_base_path }}/mautrix-hangouts.db"
  register: matrix_mautrix_hangouts_stat_database

- name: (Data relocation) Ensure matrix-mautrix-hangouts.service is stopped
  service:
    name: matrix-mautrix-hangouts
    state: stopped
    daemon_reload: yes
  failed_when: false
  when: "matrix_mautrix_hangouts_stat_database.stat.exists"

- name: (Data relocation) Move mautrix-hangouts database file to ./data directory
  command: "mv {{ matrix_mautrix_hangouts_base_path }}/mautrix-hangouts.db {{ matrix_mautrix_hangouts_data_path }}/mautrix-hangouts.db"
  when: "matrix_mautrix_hangouts_stat_database.stat.exists"

- name: Ensure mautrix-hangouts config.yaml installed
  copy:
    content: "{{ matrix_mautrix_hangouts_configuration|to_nice_yaml }}"
    dest: "{{ matrix_mautrix_hangouts_config_path }}/config.yaml"
    mode: 0644
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"

- name: Ensure mautrix-hangouts registration.yaml installed
  copy:
    content: "{{ matrix_mautrix_hangouts_registration|to_nice_yaml }}"
    dest: "{{ matrix_mautrix_hangouts_config_path }}/registration.yaml"
    mode: 0644
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"

- name: Ensure matrix-mautrix-hangouts.service installed
  template:
    src: "{{ role_path }}/templates/systemd/matrix-mautrix-hangouts.service.j2"
    dest: "{{ matrix_systemd_path }}/matrix-mautrix-hangouts.service"
    mode: 0644
  register: matrix_mautrix_hangouts_systemd_service_result

- name: Ensure systemd reloaded after matrix-mautrix-hangouts.service installation
  service:
    daemon_reload: yes
  when: "matrix_mautrix_hangouts_systemd_service_result.changed"
